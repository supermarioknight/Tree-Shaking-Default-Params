{"mappings":"AEAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AAExC,MAAM,6BAAO,GAAG,UAAU,CAAC,IAAI,CAAC;AAC9B,KAAC;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,MAAE;AAAE,KAAC;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,OAAG;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAC5E,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,MAAE;AAAE,OAAG;AAAE,OAAG;AAAE,KAAC;AAAE,KAAC;AAAE,MAAE;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,KAAC;AAAE,MAAE;AAAE,KAAC;AAAE,MAAE;AAAE,KAAC;AAAE,OAAG;AAAE,MAAE;CACnE,CAAC,CAAC,MAAM,AAAC;AAEV,MAAM,0BAAI,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,6BAAO,EAAE;IAClD,GAAG,EAAE;QAAE,KAAK,EAAE,IAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;KAAE;CAC5C,CAAC,AAAC;AAEH,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;AAE5C,MAAM,yCAAG,GAAG,0BAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,AAAC;;ADb7C;AAAA,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAI/B,MAAM,yCAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,iBAAiB,GAAG,yCAAG,GAAK;IAC9D,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACrC,OAAO,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAChC,AAAC;AAEF,MAAM,sCAAgB,GAAG,CAAC,6CAA6C,CAAC,AAAC;AAElE,MAAM,yCAAe,GAAG,IAAM;IACnC,OAAO,CAAC,GAAG,CAAC,CAAC,2CAA2C,CAAC,EAAE,sCAAgB,CAAC,CAAC;CAC9E,AAAC;;ADbF;AGAA;AAAA,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAI/B,MAAM,yCAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,iBAAiB,GAAG,yCAAG,GAAK;IACnE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACrC,OAAO,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACtD,AAAC;;;AHPF,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAK/B,MAAM,2BAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAK,CAAC,GAAG,CAAC;AAAC;AAE9B,OAAO,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,yCAAa,CAAC,CAAC,EAAE,CAAC,EAAE,2BAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,OAAO,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,yCAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,2BAAK,CAAC,CAAC,CAAC,CAAC,CAAC","sources":["src/app-shakable.js","src/lib-1.js","src/exports-wasm.js","src/lib-2.js"],"sourcesContent":["console.log('running app.mjs');\n\nimport { addTwoNumbers } from './lib-1.js';\nimport { addThreeNumbers } from './lib-2.js';\n\nconst myAdd = (a, b) => a + b;\n\nconsole.log(`addTwoNumbers: ${addTwoNumbers(1, 2, myAdd)}`);\nconsole.log(`addThreeNumbers: ${addThreeNumbers(1, 2, 3, myAdd)}`);\n","console.log('running consumer-1.mjs');\n\nimport { add } from './exports-wasm.js';\n\nexport const addTwoNumbers = (a, b, addImplementation = add) => {\n  console.log('running addTwoNumbers');\n  return addImplementation(a, b);\n};\n\nconst treeShakenString = `This string should not show up in any bundle.`;\n\nexport const easyToTreeShake = () => {\n  console.log(`This function should be easy to tree-shake.`, treeShakenString);\n};\n","console.log('running exports-wasm.mjs');\n\nconst addWasm = Uint8Array.from([\n  0, 97, 115, 109, 1, 0, 0, 0, 1, 7, 1, 96, 2, 127, 127, 1, 127, 3, 2, 1, 0, 7,\n  7, 1, 3, 97, 100, 100, 0, 0, 10, 9, 1, 7, 0, 32, 0, 32, 1, 106, 11,\n]).buffer;\n\nconst wasm = await WebAssembly.instantiate(addWasm, {\n  env: { abort: () => console.log('Abort!') },\n});\n\nconsole.log('exports-wasm.mjs: wasm instantiated');\n\nexport const add = wasm.instance.exports.add;\n","console.log('running consumer-2.mjs');\n\nimport { add } from './exports-wasm.js';\n\nexport const addThreeNumbers = (a, b, c, addImplementation = add) => {\n  console.log('running addTwoNumbers');\n  return addImplementation(addImplementation(a, b), c);\n};\n"],"names":[],"version":3,"file":"app-shakable.js.map"}